{"ast":null,"code":"var _jsxFileName = \"/Users/venky/Documents/GitHub/AR-APP-GLTF/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const initialize = async () => {\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera();\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n      scene.add(light);\n      const reticleGeometry = new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2);\n      const reticleMaterial = new THREE.MeshBasicMaterial();\n      const reticle = new THREE.Mesh(reticleGeometry, reticleMaterial);\n      reticle.matrixAutoUpdate = false;\n      reticle.visible = false;\n      scene.add(reticle);\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.xr.enabled = true;\n      const arButton = ARButton.createButton(renderer, {\n        requiredFeatures: ['hit-test'],\n        optionalFeatures: ['dom-overlay'],\n        domOverlay: {\n          root: document.body\n        }\n      });\n      document.body.appendChild(renderer.domElement);\n      document.body.appendChild(arButton);\n      const controller = renderer.xr.getController(0);\n      scene.add(controller);\n      controller.addEventListener('select', () => {\n        // const materials = [\n        //   new THREE.MeshBasicMaterial({ color: 0xff0000 }),\n        //   new THREE.MeshBasicMaterial({ color: 0x00ff00 }),\n        //   new THREE.MeshBasicMaterial({ color: 0x0000ff }),\n        //   new THREE.MeshBasicMaterial({ color: 0xffff00 }),\n        //   new THREE.MeshBasicMaterial({ color: 0xff00ff }),\n        //   new THREE.MeshBasicMaterial({ color: 0x00ffff })\n        // ];\n        // const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n        // const mesh = new THREE.Mesh(geometry, materials);\n\n        // mesh.position.setFromMatrixPosition(reticle.matrix);\n        // scene.add(mesh);\n\n        const loader = new GLTFLoader();\n        loader.load('/assets/SHOE_CABINET.gltf', gltf => {\n          const object = gltf.scene;\n          object.position.setFromMatrixPosition(reticle.matrix);\n          scene.add(object);\n        });\n      });\n      renderer.xr.addEventListener(\"sessionstart\", async e => {\n        const session = renderer.xr.getSession();\n        const viewerReferenceSpace = await session.requestReferenceSpace(\"viewer\");\n        const hitTestSource = await session.requestHitTestSource({\n          space: viewerReferenceSpace\n        });\n        renderer.setAnimationLoop((timestamp, frame) => {\n          if (!frame) return;\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\n          if (hitTestResults.length) {\n            const hit = hitTestResults[0];\n            const referenceSpace = renderer.xr.getReferenceSpace(); // ARButton requested 'local' reference space\n            const hitPose = hit.getPose(referenceSpace);\n            reticle.visible = true;\n            reticle.matrix.fromArray(hitPose.transform.matrix);\n          } else {\n            reticle.visible = false;\n          }\n          renderer.render(scene, camera);\n        });\n      });\n      renderer.xr.addEventListener(\"sessionend\", () => {\n        console.log(\"session end\");\n      });\n    };\n    initialize();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","_s","initialize","scene","Scene","camera","PerspectiveCamera","light","HemisphereLight","add","reticleGeometry","RingGeometry","rotateX","Math","PI","reticleMaterial","MeshBasicMaterial","reticle","Mesh","matrixAutoUpdate","visible","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","xr","enabled","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","document","body","appendChild","domElement","controller","getController","addEventListener","loader","load","gltf","object","position","setFromMatrixPosition","matrix","e","session","getSession","viewerReferenceSpace","requestReferenceSpace","hitTestSource","requestHitTestSource","space","setAnimationLoop","timestamp","frame","hitTestResults","getHitTestResults","length","hit","referenceSpace","getReferenceSpace","hitPose","getPose","fromArray","transform","render","console","log","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/venky/Documents/GitHub/AR-APP-GLTF/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader';\n\nfunction App() {\n  useEffect(() => {\n    const initialize = async () => {\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera();\n\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n      scene.add(light);\n\n      const reticleGeometry = new THREE.RingGeometry(0.15, 0.2, 32).rotateX(- Math.PI / 2);\n      const reticleMaterial = new THREE.MeshBasicMaterial();\n      const reticle = new THREE.Mesh(reticleGeometry, reticleMaterial);\n      reticle.matrixAutoUpdate = false;\n      reticle.visible = false;\n      scene.add(reticle);\n\n      const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight)\n      renderer.xr.enabled = true;\n\n      const arButton = ARButton.createButton(renderer, { requiredFeatures: ['hit-test'], optionalFeatures: ['dom-overlay'], domOverlay: { root: document.body } });\n      document.body.appendChild(renderer.domElement);\n      document.body.appendChild(arButton);\n\n      const controller = renderer.xr.getController(0);\n      scene.add(controller);\n      controller.addEventListener('select', () => {\n        // const materials = [\n        //   new THREE.MeshBasicMaterial({ color: 0xff0000 }),\n        //   new THREE.MeshBasicMaterial({ color: 0x00ff00 }),\n        //   new THREE.MeshBasicMaterial({ color: 0x0000ff }),\n        //   new THREE.MeshBasicMaterial({ color: 0xffff00 }),\n        //   new THREE.MeshBasicMaterial({ color: 0xff00ff }),\n        //   new THREE.MeshBasicMaterial({ color: 0x00ffff })\n        // ];\n        // const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n        // const mesh = new THREE.Mesh(geometry, materials);\n\n        // mesh.position.setFromMatrixPosition(reticle.matrix);\n        // scene.add(mesh);\n\n        const loader = new GLTFLoader();\n        loader.load('/assets/SHOE_CABINET.gltf', (gltf) => {\n          const object = gltf.scene;\n          object.position.setFromMatrixPosition(reticle.matrix);\n          scene.add(object);\n        })\n      });\n\n      renderer.xr.addEventListener(\"sessionstart\", async (e) => {\n        const session = renderer.xr.getSession();\n        const viewerReferenceSpace = await session.requestReferenceSpace(\"viewer\");\n        const hitTestSource = await session.requestHitTestSource({ space: viewerReferenceSpace });\n\n        renderer.setAnimationLoop((timestamp, frame) => {\n          if (!frame) return;\n\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n          if (hitTestResults.length) {\n            const hit = hitTestResults[0];\n            const referenceSpace = renderer.xr.getReferenceSpace(); // ARButton requested 'local' reference space\n            const hitPose = hit.getPose(referenceSpace);\n\n            reticle.visible = true;\n            reticle.matrix.fromArray(hitPose.transform.matrix);\n          } else {\n            reticle.visible = false;\n          }\n\n          renderer.render(scene, camera);\n        });\n      });\n\n      renderer.xr.addEventListener(\"sessionend\", () => {\n        console.log(\"session end\");\n      });\n\n    }\n\n    initialize();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div id=\"container\"></div>\n    </div>\n  )\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}